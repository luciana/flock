# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

# 1 User has many Votes
type User @model @auth(rules: [
      { allow: owner, operations: [create, read, update, delete] }
      { allow: private, operations: [create, read, update, delete] }   
      ]) {
  id: ID! @primaryKey
  locale: String!
  email: AWSEmail! @index(name: "byEmail", queryField: "userByEmail")
  name: String
  userTag: String @index(name: "byUserTag", sortKeyFields: ["id"])  
  birthdate: AWSDate
  votes: AWSJSON #make it empty [] at creation
}


# 1 Question belongs to 1 User #UserID
# 1 Question has many options
type Question @model            
             @auth(rules: [
                  { allow: owner, ownerField: "userID", operations: [ read, create, update, delete]},
                  { allow: private, operations: [read, create, update] }                  
                  ])
              {
  id: ID!  @primaryKey
  text: String!  #@index(name: "allQuestions", queryField: "getAllQuestions")
  userID: ID! @index(name:"byUserId", queryField: "questionByUserId")
  userName: String
  voteEndAt: AWSDateTime
  sentiment: String
  parentID: ID 
  questionTag: String  #@index(name: "byQuestionTag", sortKeyFields: ["id"])
  options: AWSJSON #need to make this mandatory
}

 