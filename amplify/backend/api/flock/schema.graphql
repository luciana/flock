# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

# 1 User has many Votes
type User @model @auth(rules: [{ allow: owner, operations: [create, read, update] }]) {
  id: ID! @primaryKey
  locale: String!
  email: AWSEmail! @index(name: "byEmail", queryField: "userByEmail")
  name: String
  userTag: String @index(name: "byUserTag", sortKeyFields: ["id"])  
  birthdate: AWSDate
  #questions: [Question] @hasMany(indexName: "byUserID", fields: ["id"])
  votes: [Vote] @hasMany(indexName: "byUserID", fields: ["id"])
  online_ping: Boolean
  last_seen_at: AWSDateTime
}


# 1 Question belongs to 1 User #UserID
# 1 Question has many options
type Question @model            
              @auth(rules: [{ allow: private, operations: [create, read, update] }]) {
  id: ID!  @primaryKey
  text: String!  @index(name: "allQuestions", queryField: "getAllQuestions")
  user: User
  voteEndedAt: AWSDateTime
  sentiment: String
  parentID: ID 
  questionTag: String  @index(name: "byQuestionTag", sortKeyFields: ["id"])
  options: [Option] @hasMany(indexName: "byQuestion", fields: ["id"])
}

# 1 Option belongs to 1 Question  #QuestionID
# 1 Option has many Votes
type Option @model  @auth(rules: [{ allow: owner, operations: [read, create, update] }]) {
  id:ID!  @primaryKey
  text: String! @index(name: "byVotes", queryField: "optionsByVotes")
  votes: [Vote] 
  questionID: ID!  @index(name: "byQuestion", sortKeyFields: ["id"]) 
}

# 1 Vote belongs to 1 Option #OptionID
# 1 Vote belongs to 1 User
type Vote @model @auth(rules: [{ allow: owner, operations: [read, create, update] }]) {
  id: ID!  @primaryKey
  userID: ID! @index(name: "byUserID", sortKeyFields: ["id"]) 
  optionID: ID! @index(name: "byOptionID", sortKeyFields: ["id"]) 
}

type ModelVoteConnection {
	items: [Vote]!
  scannedCount: Int
  count: Int
	nextToken: String
}

